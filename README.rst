======================
VHDL coding guidelines
======================

Это свод правил написания VHDL кода, скомпилированный на основании различных источников и личного опыта.

**В данный момент порядковые номера правил в репозитории могут изменяться . В дальнейшем это будет запрещено.**

*Предназначен в первую очередь для внутреннего использования, но стороннее "мнение", если такое будет, 
так же будет рассматриваться.*


Базовые правила 
===============

==============  ==============================================================================================
     **Номер**  1.1
--------------  ----------------------------------------------------------------------------------------------
  **Описание**  Используйте **строчные** буквы для всех ключевых слов языка программирования VHDL 
                и для все типов данных
--------------  ----------------------------------------------------------------------------------------------
    **Пример**  .. code:: vhdl

                    signal sig_name : std_logic; -- верно
                    signal sig_name : std_logic; -- неверно
==============  ==============================================================================================

==============  ==============================================================================================
     **Номер**  1.2
--------------  ----------------------------------------------------------------------------------------------
  **Описание**  Используйте **строчные** буквы для названий |signal|, |variable| и |port|.
--------------  ----------------------------------------------------------------------------------------------
    **Пример**  .. code:: vhdl

                    signal sig_name : std_logic;                       -- верно
                    variable var_name : integer range 0 to 9;          -- верно
                    signal Sig_Name1, SIG_NAME2, SigName3 : std_logic; -- неверно
==============  ==============================================================================================

==============  ==============================================================================================
     **Номер**  1.3
--------------  ----------------------------------------------------------------------------------------------
  **Описание**  Используйте **прописные** буквы для имен |constant| и пользовательских типов данных.
--------------  ----------------------------------------------------------------------------------------------
    **Пример**  .. code:: vhdl

                    constant CONST_NAME : std_logic;          -- верно
                    type COLOR is (BLUE, GREEN, YELLOW, RED); -- верно
                    constant const_name : std_logic;          -- неверно
==============  ==============================================================================================

==============  ==============================================================================================
     **Номер**  1.4
--------------  ----------------------------------------------------------------------------------------------
  **Описание**  Создаваемые имена для |objects|, |function| (и так далее) должны быть значащими 
                и понятными.
--------------  ----------------------------------------------------------------------------------------------
    **Пример**  Для обозначения шины адреса RAM лучше использовать *ram_addr*, а не *ra*:
                
                .. code:: vhdl

                    ram_addr : out std_logic_vector(7 downto 0); -- верно
                    ra : out std_logic_vector(7 downto 0);       -- неверно
==============  ==============================================================================================

==============  ==============================================================================================
     **Номер**  1.5
--------------  ----------------------------------------------------------------------------------------------
  **Описание**  Наименование тактовых сигналов должно быть **clk** или, если тактовых сигналов в блоке 
                несколько, с префиксом **clk\_** . После префикса должны идти осмысленные названия, 
                а не нумерация. 
                | Не допустимо: **clk1**, **clk2**, **clk_3**. 
                | Допустимо: **clk_interface**, **clk_spi**, **clk_high**
--------------  ----------------------------------------------------------------------------------------------
    **Пример**  .. code:: vhdl

                    clk_gen : in std_logic; -- верно
                    clk50 : in std_logic;   -- неверно
==============  ==============================================================================================

==============  ==============================================================================================
     **Номер**  1.6
--------------  ----------------------------------------------------------------------------------------------
  **Описание**  Сигнал сброса, активный в логической единице (active-high), должен называться **rst** или 
                иметь префикс **rst\_** . Сигнал сброса, активный в логическом нуле (active-low), должен 
                называться **rst_n**  или иметь префикс **rst\_** и постфикс **\_n**.
--------------  ----------------------------------------------------------------------------------------------
    **Пример**  .. code:: vhdl

                    rst : in std_logic;       -- верно
                    rst_spi_n : in std_logic; -- верно
                    reset : in std_logic;     -- неверно
                    nreset : in std_logic;    -- неверно
==============  ==============================================================================================

==============  ==============================================================================================
     **Номер**  1.7
--------------  ----------------------------------------------------------------------------------------------
  **Описание**  Однобитные сигналы, активные в логическом нуле (active-low),  должны содержать 
                в названии постфикс **\_n** .
--------------  ----------------------------------------------------------------------------------------------
    **Пример**  .. code:: vhdl

                    enable_n : in std_logic; -- верно
==============  ==============================================================================================

==============  ==============================================================================================
     **Номер**  1.8
--------------  ----------------------------------------------------------------------------------------------
  **Описание**  Используйте нисходящий порядок битов в многобитных |objects|.
--------------  ----------------------------------------------------------------------------------------------
    **Пример**  .. code:: vhdl

                    signal data : std_logic_vector(7 downto 0); -- верно
                    signal data : std_logic_vector(0 to 7);     -- неверно
==============  ==============================================================================================

==============  ==============================================================================================
     **Номер**  1.9
--------------  ----------------------------------------------------------------------------------------------
  **Описание**  Там где это возможно, используйте одинаковые или похожие имена |port| и |signal|, 
                которые к ним подключаются 
--------------  ----------------------------------------------------------------------------------------------
    **Пример**  .. code:: vhdl

                    port map(
                        clk => clk,           -- верно
                        data => spi_data,     -- верно
                        enable => spi_enable, -- верно
                        busy => waiting       -- неверно
                    );
==============  ==============================================================================================

==============  ==============================================================================================
     **Номер**  1.10
--------------  ----------------------------------------------------------------------------------------------
  **Описание**  Используйте тип данных **std_logic[_vector]** для |port|.
--------------  ----------------------------------------------------------------------------------------------
    **Пример**  .. code:: vhdl

                    entity module is
                        port (
                            data1 : in std_logic;                    -- верно
                            data2 : in std_logic_vector(3 downto 0); -- верно
                            data3 : out unsigned(3 downto 0)         -- неверно
                        );
                    end module;
==============  ==============================================================================================

==============  ==============================================================================================
     **Номер**  1.11
--------------  ----------------------------------------------------------------------------------------------
  **Описание**  Давайте следующие названия для |architecture|:
                    * **rtl** или префикс **rtl\_** - RTL-типа архитектуры
                    * **sim** или префикс **sim\_** - архитектура для симуляции
                    * **tb** - архитектура testbench файла
--------------  ----------------------------------------------------------------------------------------------
    **Пример**  .. code:: vhdl

                    architecture rtl of module is --верно
                    -- ...
                    architecture sim of module is --верно
                    -- ...
                    architecture tb of tb_file is --верно
==============  ==============================================================================================

==============  ==============================================================================================
     **Номер**  1.12
--------------  ----------------------------------------------------------------------------------------------
  **Описание**  Каждый файл должен содержать заголовок в виде комментария. Весь текст должен быть написан 
                на латинице.

                В заголовке указывается следующая информация:
                    * Названия файла (*Filename*)
                    * Автор[ы] (*Author*)
                    * Дата создания файла (*Data*)
                    * Кратное описания (*Annotation*). Может быть 
                    * Версия (*Version*)
                    * Дата последней модификации (*Mod.Data*)
                
                Так же на усмотрение разработчика могут быть добавлены следующие поля:
                    * Лицензию (*License*)
                    * Почта для связи (*E-mail*)
                    * Ссылка на репозиторий или сайт (*Link*)
                    * Зависимости от других файлов (*Dependency*)
                    * Детальное описание работы кода (*Description*)
                    * Примечание (*Note*)
                
--------------  ----------------------------------------------------------------------------------------------
    **Пример**  .. code:: vhdl

                    -- Обязательная часть заголовка:
                    -- Filename     : jr_module.vhd
                    -- Author       : John Rambo
                    -- Date         : 07.06.1972
                    -- Annotation   : This file is written by a fictional character in the Rambo series.
                    --                “They drew first blood” 
                    -- Version      : 0.5
                    -- Mod.Data     : 11.02.1981

                    -- Дополнительная часть заголовка:
                    -- License      : GPL
                    -- E-mail       : john_rambo_72@gmail.com
                    -- Link         : www.john_ram6o_repo.xyz
                    -- Dependency   : dm_module.vhd
                    --                d_m_repo.com
                    --                david_morre11@gmail.com
                    -- Description: : .....................
                    -- Note         : .....................
==============  ==============================================================================================

==============  ==============================================================================================
     **Номер**  1.13
--------------  ----------------------------------------------------------------------------------------------
  **Описание**      Большинство специалистов сходятся во мнении, что комментарии должны объяснять намерения 
                    программиста, а не код; то, что можно выразить на языке программирования, не должно 
                    выноситься в комментарии [`Wikipedia - Комментарии`_]
                
                .. _`Wikipedia - Комментарии`: 
                    https://ru.wikipedia.org/wiki/Комментарии_(программирование)#Назначение_комментариев

                * Для описания |objects|, |type| старайтесь размещать комментарий **в той же строке**
                * Для описания |function|, |process|, |procedure| и других многострочных структур размещайте 
                  комментарий **строчкой выше**.
                
--------------  ----------------------------------------------------------------------------------------------
    **Пример**  .. code:: vhdl

                    ---- верно:
                    signal flag_position : std_logic; -- '1' - HOME position; '0' - FINISH position

                    ---- неверно:
                    signal flag_position : std_logic; -- flag of position 

                    ---- неверно:
                    -- '1' - HOME position; '0' - FINISH position
                    signal flag_position : std_logic;

                .. code:: vhdl

                    ---- верно:
                    -- Manager State Machine of IIC interface
                    process (clk)
                    begin

                    ---- неверно:
                    process (clk) -- Manager State Machine of IIC interface
                    begin
==============  ==============================================================================================

==============  ==============================================================================================
     **Номер**  1.14
--------------  ----------------------------------------------------------------------------------------------
  **Описание**  * Каждое выражение VHDL должно находиться на отдельной строке.
                * Не группируйте объявления |signal|, |port| - пишите каждое на отдельной строке
--------------  ----------------------------------------------------------------------------------------------
    **Пример**  .. code:: vhdl

                    a <= b and c;              -- верно
                    c <= d or e;               -- верно
                    a <= b and c; c <= d or e; -- неверно

                    signal a : std_logic;   -- верно
                    signal b : std_logic;   -- верно
                    signal a,b : std_logic; -- неверно

==============  ==============================================================================================







.. Словарь

.. Объекты языка VHDL

.. |objects| replace:: *signal*, *port*, *variable*, *constant*

.. |port| replace:: *port*

.. |signal| replace:: *signal*

.. |variable| replace:: *variable* 

.. |constant| replace:: *constant* 

.. |type| replace:: *type*

.. |entity| replace:: *entity*

.. |architecture| replace:: *architecture*

.. |package| replace:: *package* 

.. |function| replace:: *function* 

.. |process| replace:: *process* 

.. |procedure| replace:: *procedure* 

.. Вспомогательные конструкции

.. 
